<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Scott Guymer</title>
    <link>https://www.scottguymer.co.uk/blog/</link>
    <description>Recent content in Blogs on Scott Guymer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© This post is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License，please give source if you wish to quote or reproduce.</copyright>
    <lastBuildDate>Sat, 24 Mar 2018 11:39:23 +0000</lastBuildDate>
    
	<atom:link href="https://www.scottguymer.co.uk/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Aggregating application deployment data (Part 1)</title>
      <link>https://www.scottguymer.co.uk/blog/aggregating-application-deployment-data/</link>
      <pubDate>Sat, 24 Mar 2018 11:39:23 +0000</pubDate>
      
      <guid>https://www.scottguymer.co.uk/blog/aggregating-application-deployment-data/</guid>
      <description>Any company of a decent size and age that creates software at any scale will have gone through a number of &amp;ldquo;technical evolutions&amp;rdquo;. These come along as you hire new people, create new products or just better ways of doing things come along. The kind of changes I&amp;rsquo;m talking about are the adoption of different technologies over time and the introduction of new ones. This cuts right across different aspects of software, from languages to frameworks to techniques to tooling.</description>
    </item>
    
    <item>
      <title>Unit testing complex LINQ statements</title>
      <link>https://www.scottguymer.co.uk/blog/making-linq-testable-in-isolation/</link>
      <pubDate>Mon, 12 Mar 2018 10:53:21 +0000</pubDate>
      
      <guid>https://www.scottguymer.co.uk/blog/making-linq-testable-in-isolation/</guid>
      <description>LINQ is amongst the greatest features of c# and when it was released people instantly took to using it. It forms the basis of may ORMs and other object manipulation tools. It can form a great abstraction when loading and manipulating data.
It can however like a lot of great tools be horrendously misused by a lot of people. I have seen 10+ line LINQ statements dropped into the middle of large blocks of business logic.</description>
    </item>
    
  </channel>
</rss>