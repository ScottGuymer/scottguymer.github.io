<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Scott Guymer</title>
    <link>https://www.scottguymer.co.uk/post/</link>
    <description>Recent content in Posts on Scott Guymer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© This post is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License，please give source if you wish to quote or reproduce.</copyright>
    <lastBuildDate>Fri, 09 Mar 2018 17:54:40 +0000</lastBuildDate>
    
	<atom:link href="https://www.scottguymer.co.uk/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>My Software Engineering Reading List</title>
      <link>https://www.scottguymer.co.uk/post/my-software-engineering-reading-list/</link>
      <pubDate>Fri, 09 Mar 2018 17:54:40 +0000</pubDate>
      
      <guid>https://www.scottguymer.co.uk/post/my-software-engineering-reading-list/</guid>
      <description>Software Design Patterns This is the basics. Every software developer needs to understand these things. Im far from saying that this book contains the only rules you should ever follow when creating software and using patterns. I think you need to mix and match these and other patterns to help you solve the problem. But having everyone know these basic patterns and be able to speak to them from the same context is a great thing.</description>
    </item>
    
  </channel>
</rss>